{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc6c94880920f6d47f1a2dd523893b0c0e4bec1a432757b551b74760f6dbfd32f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1006604",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x39b36616a59432e205a6328bb1d8af6b4975ac460b992ce5010d04db40ecd8a3",
    "transactionHash": "0xc6c94880920f6d47f1a2dd523893b0c0e4bec1a432757b551b74760f6dbfd32f",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1006604",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "a3f726fd95ef0483cb9250aa93bf036b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Kron\",\"details\":\"This implements price feed as a library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feed as a library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds the contract\"}},\"notice\":\"This contract is to demo simple fund cotract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.7;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowd funding\\n *  @author Kron\\n *  @notice This contract is to demo simple fund cotract\\n *  @dev This implements price feed as a library\\n */\\ncontract FundMe {\\n    // Type declaration\\n    using PriceConverter for uint256;\\n\\n    //State variables\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private priceFeed;\\n\\n    //Modifier\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     *\\n     *  @notice This function funds the contract\\n     *  @dev This implements price feed as a library\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't sent enough\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 i = 0; i < s_funders.length; i++) {\\n            address funder = s_funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n    }\\n\\n    //View,pure\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xf49fc23aaf0e180ad9fcdfbe1c1ea822b95b3fe03882b6d53be37e1d1947a6ae\",\"license\":\"Unlicense\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData(); // eth in usd 1200.00000000\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x258bd2196433fb1ab8b9bf2f73ea446b6d74276c98d6f3fceaf0653e08eb260c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200125e3803806200125e8339818101604052810190620000379190620000cd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600081519050620000c78162000138565b92915050565b600060208284031215620000e657620000e562000133565b5b6000620000f684828501620000b6565b91505092915050565b60006200010c8262000113565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014381620000ff565b81146200014f57600080fd5b50565b60805160601c6110d8620001866000396000818161033201528181610581015281816105d101526107c701526110d86000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a86565b6102e7565b6040516100cc9190610c7c565b60405180910390f35b3480156100e157600080fd5b506100ea610330565b005b3480156100f857600080fd5b50610101610570565b60405161010e9190610c7c565b60405180910390f35b34801561012357600080fd5b5061012c61057d565b6040516101399190610c06565b60405180910390f35b34801561014e57600080fd5b506101576105a5565b6040516101649190610c21565b60405180910390f35b6101756101be565b005b61017f6105cf565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610ab3565b610853565b6040516101b59190610c06565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089a90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c3c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b5576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104605760008082815481106103da576103d9610f8e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045890610ee7565b9150506103b8565b50600067ffffffffffffffff81111561047c5761047b610fbd565b5b6040519080825280602002602001820160405280156104aa5781602001602082028036833780820191505090505b50600090805190602001906104c0929190610976565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e790610bf1565b60006040518083038185875af1925050503d8060008114610524576040519150601f19603f3d011682016040523d82523d6000602084013e610529565b606091505b505090508061056d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056490610c5c565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610654576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106d757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068d575b5050505050905060005b81518110156107625760008282815181106106ff576106fe610f8e565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075a90610ee7565b9150506106e1565b50600067ffffffffffffffff81111561077e5761077d610fbd565b5b6040519080825280602002602001820160405280156107ac5781602001602082028036833780820191505090505b50600090805190602001906107c2929190610976565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080990610bf1565b60006040518083038185875af1925050503d8060008114610846576040519150601f19603f3d011682016040523d82523d6000602084013e61084b565b606091505b505090505050565b600080828154811061086857610867610f8e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108a6836108d6565b90506000670de0b6b3a764000085836108bf9190610dfb565b6108c99190610cb3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091f57600080fd5b505afa158015610933573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109579190610ae0565b5050509150506402540be4008161096e9190610ce4565b915050919050565b8280548282559060005260206000209081019282156109ef579160200282015b828111156109ee5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610996565b5b5090506109fc9190610a00565b5090565b5b80821115610a19576000816000905550600101610a01565b5090565b600081359050610a2c81611046565b92915050565b600081519050610a418161105d565b92915050565b600081359050610a5681611074565b92915050565b600081519050610a6b81611074565b92915050565b600081519050610a808161108b565b92915050565b600060208284031215610a9c57610a9b610fec565b5b6000610aaa84828501610a1d565b91505092915050565b600060208284031215610ac957610ac8610fec565b5b6000610ad784828501610a47565b91505092915050565b600080600080600060a08688031215610afc57610afb610fec565b5b6000610b0a88828901610a71565b9550506020610b1b88828901610a32565b9450506040610b2c88828901610a5c565b9350506060610b3d88828901610a5c565b9250506080610b4e88828901610a71565b9150509295509295909350565b610b6481610e55565b82525050565b610b7381610eb1565b82525050565b6000610b86601283610ca2565b9150610b9182610ff1565b602082019050919050565b6000610ba9600083610c97565b9150610bb48261101a565b600082019050919050565b6000610bcc600b83610ca2565b9150610bd78261101d565b602082019050919050565b610beb81610e91565b82525050565b6000610bfc82610b9c565b9150819050919050565b6000602082019050610c1b6000830184610b5b565b92915050565b6000602082019050610c366000830184610b6a565b92915050565b60006020820190508181036000830152610c5581610b79565b9050919050565b60006020820190508181036000830152610c7581610bbf565b9050919050565b6000602082019050610c916000830184610be2565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cbe82610e91565b9150610cc983610e91565b925082610cd957610cd8610f5f565b5b828204905092915050565b6000610cef82610e67565b9150610cfa83610e67565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d3957610d38610f30565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d7657610d75610f30565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610db357610db2610f30565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610df057610def610f30565b5b828202905092915050565b6000610e0682610e91565b9150610e1183610e91565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4a57610e49610f30565b5b828202905092915050565b6000610e6082610e71565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610ebc82610ec3565b9050919050565b6000610ece82610ed5565b9050919050565b6000610ee082610e71565b9050919050565b6000610ef282610e91565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f2557610f24610f30565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e7420656e6f7567680000000000000000000000000000600082015250565b50565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b61104f81610e55565b811461105a57600080fd5b50565b61106681610e67565b811461107157600080fd5b50565b61107d81610e91565b811461108857600080fd5b50565b61109481610e9b565b811461109f57600080fd5b5056fea264697066735822122038256e0cec82cb647ec878b08ea02cc4bdf0f75acd4c3ba68302065bc267cd6964736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a86565b6102e7565b6040516100cc9190610c7c565b60405180910390f35b3480156100e157600080fd5b506100ea610330565b005b3480156100f857600080fd5b50610101610570565b60405161010e9190610c7c565b60405180910390f35b34801561012357600080fd5b5061012c61057d565b6040516101399190610c06565b60405180910390f35b34801561014e57600080fd5b506101576105a5565b6040516101649190610c21565b60405180910390f35b6101756101be565b005b61017f6105cf565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610ab3565b610853565b6040516101b59190610c06565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089a90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c3c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b5576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104605760008082815481106103da576103d9610f8e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045890610ee7565b9150506103b8565b50600067ffffffffffffffff81111561047c5761047b610fbd565b5b6040519080825280602002602001820160405280156104aa5781602001602082028036833780820191505090505b50600090805190602001906104c0929190610976565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e790610bf1565b60006040518083038185875af1925050503d8060008114610524576040519150601f19603f3d011682016040523d82523d6000602084013e610529565b606091505b505090508061056d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056490610c5c565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610654576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106d757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068d575b5050505050905060005b81518110156107625760008282815181106106ff576106fe610f8e565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075a90610ee7565b9150506106e1565b50600067ffffffffffffffff81111561077e5761077d610fbd565b5b6040519080825280602002602001820160405280156107ac5781602001602082028036833780820191505090505b50600090805190602001906107c2929190610976565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080990610bf1565b60006040518083038185875af1925050503d8060008114610846576040519150601f19603f3d011682016040523d82523d6000602084013e61084b565b606091505b505090505050565b600080828154811061086857610867610f8e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108a6836108d6565b90506000670de0b6b3a764000085836108bf9190610dfb565b6108c99190610cb3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091f57600080fd5b505afa158015610933573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109579190610ae0565b5050509150506402540be4008161096e9190610ce4565b915050919050565b8280548282559060005260206000209081019282156109ef579160200282015b828111156109ee5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610996565b5b5090506109fc9190610a00565b5090565b5b80821115610a19576000816000905550600101610a01565b5090565b600081359050610a2c81611046565b92915050565b600081519050610a418161105d565b92915050565b600081359050610a5681611074565b92915050565b600081519050610a6b81611074565b92915050565b600081519050610a808161108b565b92915050565b600060208284031215610a9c57610a9b610fec565b5b6000610aaa84828501610a1d565b91505092915050565b600060208284031215610ac957610ac8610fec565b5b6000610ad784828501610a47565b91505092915050565b600080600080600060a08688031215610afc57610afb610fec565b5b6000610b0a88828901610a71565b9550506020610b1b88828901610a32565b9450506040610b2c88828901610a5c565b9350506060610b3d88828901610a5c565b9250506080610b4e88828901610a71565b9150509295509295909350565b610b6481610e55565b82525050565b610b7381610eb1565b82525050565b6000610b86601283610ca2565b9150610b9182610ff1565b602082019050919050565b6000610ba9600083610c97565b9150610bb48261101a565b600082019050919050565b6000610bcc600b83610ca2565b9150610bd78261101d565b602082019050919050565b610beb81610e91565b82525050565b6000610bfc82610b9c565b9150819050919050565b6000602082019050610c1b6000830184610b5b565b92915050565b6000602082019050610c366000830184610b6a565b92915050565b60006020820190508181036000830152610c5581610b79565b9050919050565b60006020820190508181036000830152610c7581610bbf565b9050919050565b6000602082019050610c916000830184610be2565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cbe82610e91565b9150610cc983610e91565b925082610cd957610cd8610f5f565b5b828204905092915050565b6000610cef82610e67565b9150610cfa83610e67565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d3957610d38610f30565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d7657610d75610f30565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610db357610db2610f30565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610df057610def610f30565b5b828202905092915050565b6000610e0682610e91565b9150610e1183610e91565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4a57610e49610f30565b5b828202905092915050565b6000610e6082610e71565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610ebc82610ec3565b9050919050565b6000610ece82610ed5565b9050919050565b6000610ee082610e71565b9050919050565b6000610ef282610e91565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f2557610f24610f30565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e7420656e6f7567680000000000000000000000000000600082015250565b50565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b61104f81610e55565b811461105a57600080fd5b50565b61106681610e67565b811461107157600080fd5b50565b61107d81610e91565b811461108857600080fd5b50565b61109481610e9b565b811461109f57600080fd5b5056fea264697066735822122038256e0cec82cb647ec878b08ea02cc4bdf0f75acd4c3ba68302065bc267cd6964736f6c63430008070033",
  "devdoc": {
    "author": "Kron",
    "details": "This implements price feed as a library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feed as a library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds the contract"
      }
    },
    "notice": "This contract is to demo simple fund cotract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}